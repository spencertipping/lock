#!/bin/bash
# Optimistic lock wrapper | Spencer Tipping
# Licensed under the terms of the MIT source code license

# Uses optimistic file-based locking to execute a command, and waits
# if the lock is already taken.
#
# Usage:
# lock lock-name command [arguments...]

if [[ $# == 0 ]]; then
  echo 'Usage: lock lock-name command [arguments...]'
  exit 1
fi

locks=~/.locks
mkdir -p "$locks"

name="$1"
shift

# Repeatedly attempt to take the lock, which in this case means creating
# a directory.
previous_pid=
while ! mkdir "$locks/$name" >& /dev/null; do
  pid=$(< "$locks/$name/pid")
  [[ $previous_pid != $pid ]] && echo "Waiting for process $pid to release lock $name..."
  previous_pid=$pid
  sleep 1
done

echo -n $$ > "$locks/$name/pid"
eval "$@"
return_code=$?

rm -f "$locks/$name/pid" && rmdir "$locks/$name"
exit $return_code
